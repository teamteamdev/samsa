worker_processes 2;
user nginx;

events {
    use epoll;
    worker_connections 128;
}

error_log stderr;

http {
    server_tokens off;
    include mime.types;
    charset utf-8;

    access_log stderr combined;

    server {
        listen [::]:8001 default_server;
        listen 8001 default_server;

        return 444;
    }

    server {
        server_name localhost;

        listen [::]:8001;
        listen 8001;

        location = /.sso/authorize {
            internal;
            proxy_pass http://localhost:8000;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://localhost:8000;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

    }

    server {
        server_name demo.localhost;

        listen [::]:8001;
        listen 8001;

        error_page 401 @error401;

        location / {
            auth_request /.sso/authorize;

            proxy_pass http://localhost:8002;
        }

        location = /.sso/authorize {
            internal;
            proxy_pass http://localhost:8000;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /.sso {
            proxy_pass http://localhost:8000;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        location @error401 {
            return 303 /.sso/login?next=$request_uri;
        }
    }

    server {
        # Example app
        listen [::]:8002;
        listen 8002;

        return 200 "Hello World";
    }
}
